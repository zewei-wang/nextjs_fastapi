name: Release

on:
  push:
    branches:
      - main
      - alpha
      - beta

jobs:
  test:
    name: Test and lint
    uses: zewei-wang/nextjs_fastapi/.github/workflows/development.yml@main

  build:
    name: Build application
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2

      - name: "🔧 setup node"
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: "🔧 install npm@latest"
        run: npm i -g npm@latest

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: "🚀 static app"
        run: npm run build

  docker:
    name: Build container
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2

      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "🔧 setup buildx"
        uses: docker/setup-buildx-action@v1

      - name: "🔧 cache docker layers"
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: "🔧 docker meta"
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ github.repository }}
          tags: latest

      - name: 'Build and push image'
        run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/app:latest
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/app:latest

#      - name: "📦 docker build"
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          outputs: type=docker,dest=/tmp/docker.tar
#          push: false
#          cache-from: type=gha, scope=${{ github.workflow }}
#          cache-to: type=gha, scope=${{ github.workflow }}

#  release:
#    environment:
#      name: production
#      url: https://github.com/${{ github.repository }}/releases/tag/${{ steps.semantic-release.outputs.release-tag }}
#    name: Semantic release
#    needs:
#      - test
#      - docker
#      - build
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    steps:
#      - name: "☁️ checkout repository"
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#      - name: "📂 download docker artifacts"
#        uses: actions/download-artifact@v4
#        with:
#          name: docker
#          path: /tmp
#
#      - name: "📦 load tag"
#        run: |
#          docker load --input /tmp/docker.tar
#          docker image ls -a
#
#      - name: "🚀 release"
#        id: semantic-release
#        uses: open-sauced/release@v2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    name: Cleanup actions
#    needs:
#      - release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "♻️ remove build artifacts"
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            build
            docker
            diagram